{"version":3,"sources":["../node_modules/string.prototype.startswith/startswith.js"],"names":["String","prototype","startsWith","defineProperty","object","$defineProperty","Object","result","error","toString","search","this","TypeError","string","call","stringLength","length","searchString","searchLength","position","arguments","undefined","pos","Number","start","Math","min","max","index","charCodeAt"],"mappings":"qFACKA,OAAOC,UAAUC,YACpB,WACE,aAEA,IAAIC,EAAiB,WAEnB,IACE,IAAIC,EAAS,GACTC,EAAkBC,OAAOH,eACzBI,EAASF,EAAgBD,EAAQA,EAAQA,IAAWC,EACxD,MAAOG,IAET,OAAOD,EARY,GAWjBE,EAAW,GAAGA,SAEdP,EAAa,SAAoBQ,GACnC,GAAY,MAARC,KACF,MAAMC,YAGR,IAAIC,EAASb,OAAOW,MAEpB,GAAID,GAAmC,mBAAzBD,EAASK,KAAKJ,GAC1B,MAAME,YAGR,IAAIG,EAAeF,EAAOG,OACtBC,EAAejB,OAAOU,GACtBQ,EAAeD,EAAaD,OAC5BG,EAAWC,UAAUJ,OAAS,EAAII,UAAU,QAAKC,EAEjDC,EAAMH,EAAWI,OAAOJ,GAAY,EAEpCG,GAAOA,IAETA,EAAM,GAGR,IAAIE,EAAQC,KAAKC,IAAID,KAAKE,IAAIL,EAAK,GAAIP,GAEvC,GAAIG,EAAeM,EAAQT,EACzB,OAAO,EAKT,IAFA,IAAIa,GAAS,IAEJA,EAAQV,GACf,GAAIL,EAAOgB,WAAWL,EAAQI,IAAUX,EAAaY,WAAWD,GAC9D,OAAO,EAIX,OAAO,GAGLzB,EACFA,EAAeH,OAAOC,UAAW,aAAc,CAC7C,MAASC,EACT,cAAgB,EAChB,UAAY,IAGdF,OAAOC,UAAUC,WAAaA,EA/DlC","file":"static/js/3.80ef220d.chunk.js","sourcesContent":["/*! http://mths.be/startswith v0.2.0 by @mathias */\nif (!String.prototype.startsWith) {\n  (function () {\n    'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\n    var defineProperty = function () {\n      // IE 8 only supports `Object.defineProperty` on DOM elements\n      try {\n        var object = {};\n        var $defineProperty = Object.defineProperty;\n        var result = $defineProperty(object, object, object) && $defineProperty;\n      } catch (error) {}\n\n      return result;\n    }();\n\n    var toString = {}.toString;\n\n    var startsWith = function startsWith(search) {\n      if (this == null) {\n        throw TypeError();\n      }\n\n      var string = String(this);\n\n      if (search && toString.call(search) == '[object RegExp]') {\n        throw TypeError();\n      }\n\n      var stringLength = string.length;\n      var searchString = String(search);\n      var searchLength = searchString.length;\n      var position = arguments.length > 1 ? arguments[1] : undefined; // `ToInteger`\n\n      var pos = position ? Number(position) : 0;\n\n      if (pos != pos) {\n        // better `isNaN`\n        pos = 0;\n      }\n\n      var start = Math.min(Math.max(pos, 0), stringLength); // Avoid the `indexOf` call if no match is possible\n\n      if (searchLength + start > stringLength) {\n        return false;\n      }\n\n      var index = -1;\n\n      while (++index < searchLength) {\n        if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    if (defineProperty) {\n      defineProperty(String.prototype, 'startsWith', {\n        'value': startsWith,\n        'configurable': true,\n        'writable': true\n      });\n    } else {\n      String.prototype.startsWith = startsWith;\n    }\n  })();\n}"],"sourceRoot":""}